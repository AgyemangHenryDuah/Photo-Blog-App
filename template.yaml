AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Photo Blog Application - Root Stack

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Deployment environment
  DomainName:
    Type: String
    Default: mscv2group3.link
    Description: Domain name for the application
  PrimaryRegion:
    Type: String
    Default: eu-central-1
    Description: Primary AWS region
  BackupRegion:
    Type: String
    Default: eu-west-1
    Description: DR backup region

  AdminEmail:
    Type: String
    Default: john.kponyo@amalitech.com
    Description: Administrator email for disaster alert notifications # Notifies the adminstrator of service outage via email.

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs20.x
    MemorySize: 256
    Environment:
      Variables:
        ENV: !Ref Environment
        PRIMARY_REGION: !Ref PrimaryRegion
        DR_REGION: !Ref BackupRegion
        APP_DOMAIN: !Ref DomainName

Resources:
  # Shared resources across all services
  # Note: SharedLayer is now created in the GitHub Actions workflow

  # Admin SNS DR Topic
  ServiceOutageNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ServiceOutageNotificationTopic-${Environment}
      DisplayName: Service Outage (DR) Notifications
    
  # Admin SNS DR Subscription
  ServiceOutageSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: !Ref AdminEmail
      TopicArn: !Ref ServiceOutageNotificationTopic


  # Cross-region backup bucket in the DR region
  CrossRegionDRBackupBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub photo-blog-app-backup-bkt-${Environment}-${AWS::AccountId}
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30


  S3ReplicationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref S3ReplicationPolicy


  S3ReplicationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for S3 bucket replication
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetReplicationConfiguration
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::photo-blog-app-processed-images-${Environment}-${AWS::AccountId}"
          - Effect: Allow
            Action:
              - s3:GetObjectVersion
              - s3:GetObjectVersionAcl
              - s3:GetObjectVersionForReplication
              - s3:GetObjectVersionTagging
            Resource:
              - !Sub "arn:aws:s3:::photo-blog-app-processed-images-${Environment}-${AWS::AccountId}/*"
          # Cross-region destination bucket permissions
          - Effect: Allow
            Action:
              - s3:ReplicateObject
              - s3:ReplicateDelete
              - s3:ReplicateTags
              - s3:GetObjectVersionTagging
            Resource:
              - !Sub "arn:aws:s3:::photo-blog-app-backup-bkt-${Environment}-${AWS::AccountId}/*"


  ProcessedImagesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub photo-blog-app-processed-images-${Environment}-${AWS::AccountId}
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: [!Sub '*']
            AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
            AllowedOrigins: [!Sub '*']
            # AllowedOrigins: [!Sub 'https://${DomainName}'] # Allowing access only from our application's domain
            MaxAge: 3600
      VersioningConfiguration:
        Status: Enabled
      ReplicationConfiguration:
        Role: !GetAtt S3ReplicationRole.Arn
        Rules:
          - Status: Enabled
            Destination:
              Bucket: !Sub "arn:aws:s3:::photo-blog-app-backup-bkt-${Environment}-${AWS::AccountId}"
              StorageClass: STANDARD
            Prefix: ""


Outputs:
  ProcessedImagesBucketName:
    Description: S3 bucket for processed images
    Value: !Ref ProcessedImagesBucket
    Export:
      Name: !Sub ${AWS::StackName}-ProcessedImagesBucket
  
  CrossRegionDRBackupBucketName:
    Description: Cross-region DR backup S3 bucket
    Value: !Ref CrossRegionDRBackupBucket
    Export:
      Name: !Sub ${AWS::StackName}-CrossRegionDRBackupBucket